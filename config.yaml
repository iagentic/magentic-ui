##########################################################################
# Multi-provider Magentic-UI config
#  – Three model "profiles"                                               
#  – Agent-level overrides                                               
#  – Safe fall-back to OpenAI when a key/host is missing                 
##########################################################################

# ---------- 1.  MODEL PROFILES  ----------------------------------------
# Re-use these anchors (&) in agent sections below.

openai_default: &openai_client               # GPT-4o via OpenAI
  provider: autogen_ext.models.openai.OpenAIChatCompletionClient
  config:
    model: gpt-4o
    api_key: ${OPENAI_API_KEY}
    base_url: "https://api.openai.com/v1"
    max_retries: 6

groq_llama3: &groq_client                    # 70 B Llama-3 via Groq Cloud
  provider: autogen_ext.models.openai.OpenAIChatCompletionClient
  config:
    model: llama3-70b-8192
    api_key: ${GROQ_API_KEY}
    base_url: "https://api.groq.com/openai/v1"         # Groq's OpenAI-compatible URL :contentReference[oaicite:0]{index=0}
    max_retries: 6

ollama_local: &ollama_client                 # Any local model via Ollama
  provider: autogen_ext.models.ollama.OllamaChatCompletionClient
  config:
    host: "http://localhost:11434"            # default Ollama REST host
    model: llama3                            # or "phi3", "mistral-7b", …
    timeout: 120
    max_retries: 3                           # YAML pattern from Magentic-UI + Ollama guide :contentReference[oaicite:1]{index=1}

# ---------- 2.  AGENT-LEVEL CLIENT OVERRIDES ---------------------------

orchestrator_client:          *openai_client   # keeps best-in-class reasoning
web_surfer_client:           *groq_client     # gains Groq's sub-50 ms latency
coder_client:                *groq_client   # runs Python + local LLM for code
file_surfer_client:          *groq_client
action_guard_client:         *openai_client

# ---------- 3.  VNC AND BROWSER CONFIGURATION --------------------------

# Fixed port configuration for VNC and Playwright
novnc_port: 6080
playwright_port: 37367
browser_headless: false
inside_docker: false
network_name: "my-network"
browser_local: false

# Docker resource limits for c3-standard-4 VM (4 vCPUs, 16 GB Memory)
memory_limit: "4g"        # 4GB RAM - leaves 12GB for system and other processes
cpu_limit: 2.0            # 2 CPU cores - leaves 2 cores for system
memswap_limit: "6g"       # 6GB total (RAM + swap) for safety

# ---------- 4.  AGENT-SPECIFIC PARAMS ----------------------------------

web_surfer_params:
  to_save_screenshots: true
  request_timeout: 30           # Groq is fast; websites are slow!

coder_env:
  # example: pass Google-Sheets creds into the Coder container
  GOOGLE_APPLICATION_CREDENTIALS: /workspace/gsheet.json
